name: CI/CD Pipeline - Python FastAPI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: docker.io
  API_IMAGE: task-management-api-python
  FRONTEND_IMAGE: task-management-frontend

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        cd 2-source-code
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Run tests
      run: |
        cd 2-source-code
        pytest --cov=app --cov-report=xml

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push API
      uses: docker/build-push-action@v5
      with:
        context: ./2-source-code
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.API_IMAGE }}:latest
    
    - name: Build and push Frontend
      uses: docker/build-push-action@v5
      with:
        context: ./3-frontend
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.FRONTEND_IMAGE }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Kubernetes
      run: |
        echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig
        export KUBECONFIG=kubeconfig
        kubectl apply -f 7-kubernetes-python/
        kubectl rollout status deployment/task-api-python -n task-management-python
